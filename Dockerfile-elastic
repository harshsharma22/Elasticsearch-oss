################################################################################
# This Dockerfile was generated from the template at templates/Dockerfile.j2
#
# Beginning of multi stage Dockerfile
################################################################################


################################################################################
# Build stage 0 `prep_es_files`:
# Extract elasticsearch artifact
# Install required plugins
# Set gid=0 and make group perms==owner perms
################################################################################

FROM sharma22/jdk AS prep_es_files

RUN curl -s https://download.java.net/java/GA/jdk11/13/GPL/openjdk-11.0.1_linux-x64_bin.tar.gz | tar -C /opt -zxf -
ENV JAVA_HOME /opt/jdk-11.0.1


RUN groupadd -g 1000 elasticsearch && adduser -uid 1000 --gid 1000  --disabled-login --disabled-password --home /usr/share/elasticsearch  elasticsearch

WORKDIR /usr/share/elasticsearch

USER 1000

# Download and extract defined ES version.
COPY --chown=1000:1000 elastic-search.tar.gz .

RUN tar -xvzf  elastic-search.tar.gz --strip-components=1

RUN rm -rf elastic-search.tar.gz

RUN set -ex && for esdirs in config data logs; do \
        mkdir -p "$esdirs"; \
    done

COPY --chown=1000:1000 elasticsearch.yml log4j2.properties config/

USER 1000

# Set gid to 0 for elasticsearch and make group permission similar to that of user
# This is needed, for example, for Openshift Open: https://docs.openshift.org/latest/creating_images/guidelines.html
# and allows ES to run with an uid

################################################################################
# Build stage 1 (the actual elasticsearch image):
# Copy elasticsearch from stage 0
# Add entrypoint
################################################################################

FROM sharma22/jdk

ENV ELASTIC_CONTAINER true

RUN curl -s https://download.java.net/java/GA/jdk11/13/GPL/openjdk-11.0.1_linux-x64_bin.tar.gz | tar -C /opt -zxf -
ENV JAVA_HOME /opt/jdk-11.0.1
RUN ls /opt/jdk-11.0.1/bin

# Replace OpenJDK's built-in CA certificate keystore with the one from the OS
# vendor. The latter is superior in several ways.
# REF: https://github.com/elastic/elasticsearch-docker/issues/171
RUN ln -sf /etc/pki/ca-trust/extracted/java/cacerts /opt/jdk-11.0.1/lib/security/cacerts


RUN groupadd -g 1000 elasticsearch && \
    adduser -uid 1000 --gid 1000  --disabled-login --disabled-password --home /usr/share/elasticsearch  elasticsearch && \
    chmod 0775 /usr/share/elasticsearch && \
    chgrp 1000 /usr/share/elasticsearch

WORKDIR /usr/share/elasticsearch
COPY --from=prep_es_files --chown=1000:1000 /usr/share/elasticsearch /usr/share/elasticsearch

COPY --chown=1000:1000 docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh

# Openshift overrides USER and uses ones with randomly uid>1024 and gid=0
# Allow ENTRYPOINT (and ES) to run even with a different user
RUN chgrp 1000 /usr/local/bin/docker-entrypoint.sh && \
    chmod g=u /etc/passwd && \
    chmod 0775 /usr/local/bin/docker-entrypoint.sh

EXPOSE 9200 9300

ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
# Dummy overridable parameter parsed by entrypoint
CMD ["eswrapper"]

################################################################################
# End of multi-stage Dockerfile
################################################################################
